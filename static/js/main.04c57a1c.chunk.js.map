{"version":3,"sources":["components/Board.js","App.js","serviceWorker.js","index.js"],"names":["SIZE","SCALE","Board","state","board","result","aX","Math","floor","random","aY","grow","snake","x","y","xV","yV","tail","game","interval","haveLost","changeDirection","e","key","_this","setState","Object","objectSpread","move","newTail","slice","length","unshift","changeSnakePosition","newBoard","i","newRow","j","push","eatApple","b","forEach","el","lose","showSnake","ctx","document","getElementById","getContext","fillStyle","fillRect","clear","removeEventListener","clearInterval","canvas","clearRect","width","height","startGame","addEventListener","setInterval","react_default","a","createElement","this","onClick","autoFocus","style","background","marginTop","id","Component","App","className","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04c57a1c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"../css/Board.css\"\r\n\r\nexport const SIZE = 30;\r\nconst SCALE = 15;\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        board: [],\r\n        result: 0,\r\n        aX: Math.floor(Math.random() * SIZE),                   //position of apple\r\n        aY: Math.floor(Math.random() * SIZE),\r\n        grow: false,                                            //determines if snake's tail should grow in next move\r\n        snake: {\r\n            x: SIZE / 2 - 1,\r\n            y: SIZE / 2 - 1,\r\n            xV: 0,\r\n            yV: 1,\r\n            tail: [{x: SIZE / 2 - 1, y: SIZE / 2 - 2}, {x: SIZE / 2 - 1, y: SIZE / 2 - 3}]\r\n        },\r\n        game: false,\r\n        interval: null,\r\n        haveLost: false                                          //determines if it's first round or not\r\n    };\r\n\r\n    changeDirection = (e) => {\r\n        if (e.key === 'a' || e.key === 'ArrowLeft') {\r\n            this.setState({\r\n                snake: {\r\n                    ...this.state.snake,\r\n                    xV: -1,\r\n                    yV: 0\r\n                }\r\n            });\r\n        } else if (e.key === 'w' || e.key === 'ArrowUp') {\r\n            this.setState({\r\n                snake: {\r\n                    ...this.state.snake,\r\n                    xV: 0,\r\n                    yV: -1\r\n                }\r\n            });\r\n        } else if (e.key === 'd' || e.key === 'ArrowRight') {\r\n            this.setState({\r\n                snake: {\r\n                    ...this.state.snake,\r\n                    xV: 1,\r\n                    yV: 0\r\n                }\r\n            });\r\n        } else if (e.key === 's' || e.key === 'ArrowDown') {\r\n            this.setState({\r\n                snake: {\r\n                    ...this.state.snake,\r\n                    xV: 0,\r\n                    yV: 1\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    move = () => {                                      //basically changes x and y of snake and its tail\r\n        let newTail;\r\n        if (this.state.grow) {\r\n            newTail = this.state.snake.tail.slice(0);\r\n            this.setState({\r\n                grow: false\r\n            })\r\n        } else {\r\n            newTail = this.state.snake.tail.slice(0, this.state.snake.tail.length - 1);\r\n        }\r\n        newTail.unshift({x: this.state.snake.x, y: this.state.snake.y});\r\n        this.setState({\r\n            snake: {\r\n                ...this.state.snake,\r\n                x: (this.state.snake.x + this.state.snake.xV) >= 0 ? (this.state.snake.x + this.state.snake.xV) % SIZE : SIZE - 1,\r\n                y: (this.state.snake.y + this.state.snake.yV) >= 0 ? (this.state.snake.y + this.state.snake.yV) % SIZE : SIZE - 1,\r\n                tail: newTail\r\n            }\r\n        });\r\n        this.changeSnakePosition(this.state.snake.x, this.state.snake.y, this.state.snake.tail);\r\n    };\r\n\r\n\r\n    changeSnakePosition = (x, y, tail) => {             //updates board taking the snake's current position ( and its tail)\r\n        let newBoard = [];\r\n        for (let i = 0; i < SIZE; i++) {\r\n            let newRow = [];\r\n            for (let j = 0; j < SIZE; j++) {\r\n                newRow.push(\"#\");\r\n            }\r\n            newBoard.push(newRow);\r\n        }\r\n\r\n        if (x === this.state.aX && y === this.state.aY)\r\n            this.eatApple();\r\n\r\n        newBoard[y][x] = \"X\";\r\n\r\n        let b = false;                          //bool flag to determine if the game is over\r\n        tail.forEach(el => {\r\n            if (x === el.x && y === el.y) {\r\n                this.lose();\r\n                b = true;\r\n            }\r\n            newBoard[el.y][el.x] = \"X\";\r\n        });\r\n        if (b) return;                          //finish the game\r\n        newBoard[this.state.aY][this.state.aX] = \"A\";\r\n        this.setState({\r\n            board: newBoard\r\n        });\r\n        this.showSnake();\r\n    };\r\n\r\n\r\n    showSnake = () => {                                                 // it shows a board to the player\r\n        // this.state.board.forEach(row => {                            to play snake in the console uncomment this\r\n        //     let r = \"\";\r\n        //     for (let i = 0; i < SIZE; i++)\r\n        //         r += \" \" + row[i];\r\n        //     console.log(r);\r\n        // });\r\n\r\n\r\n        let canvas = document.getElementById('myCanvas');\r\n        let ctx = canvas.getContext('2d');\r\n        for (let i = 0; i < SIZE; i++) {\r\n            for (let j = 0; j < SIZE; j++) {\r\n                if (this.state.board[i][j] === 'X') {\r\n                    ctx.fillStyle = \"#00e64d\";\r\n                    ctx.fillRect(j * SCALE, i * SCALE, SCALE, SCALE);\r\n                } else if (this.state.board[i][j] === 'A') {\r\n                    ctx.fillStyle = \"#ff3300\";\r\n                    ctx.fillRect(j * SCALE, i * SCALE, SCALE, SCALE);\r\n                } else {\r\n                    ctx.fillStyle = \"#000000\";\r\n                    ctx.fillRect(j * SCALE, i * SCALE, SCALE, SCALE);\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    eatApple = () => {\r\n        this.setState({\r\n            result: this.state.result + 1,\r\n            aX: Math.floor(Math.random() * SIZE),\r\n            aY: Math.floor(Math.random() * SIZE),\r\n            grow: true\r\n        });\r\n    };\r\n\r\n    lose = () => {\r\n        this.clear();\r\n        document.removeEventListener(\"keydown\", this.changeDirection, false);\r\n        clearInterval(this.state.interval);\r\n        this.setState({\r\n            board: [],\r\n            result: 0,\r\n            aX: Math.floor(Math.random() * SIZE),\r\n            aY: Math.floor(Math.random() * SIZE),\r\n            grow: false,\r\n            snake: {\r\n                x: SIZE / 2 - 1,\r\n                y: SIZE / 2 - 1,\r\n                xV: 0,\r\n                yV: 1,\r\n                tail: [{x: SIZE / 2 - 1, y: SIZE / 2 - 2}, {x: SIZE / 2 - 1, y: SIZE / 2 - 3}]\r\n            },\r\n            game: false,\r\n            interval: null,\r\n            haveLost: true\r\n        });\r\n    };\r\n\r\n    clear = () => {\r\n        let canvas = document.getElementById('myCanvas');\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    startGame = () => {\r\n        document.addEventListener(\"keydown\", this.changeDirection, false);\r\n        let interval = setInterval(this.move, 100);\r\n        this.setState({\r\n            game: true,\r\n            interval\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h2>Result: {this.state.result}</h2>\r\n                {this.state.haveLost && <h3>You lost!</h3>}\r\n                {!this.state.game &&\r\n                <button onClick={this.startGame} autoFocus>{this.state.haveLost ? \"Play again\" : \"Start\"}</button>}\r\n                <canvas width={SIZE * SCALE} height={SIZE * SCALE} style={{background: \"black\", marginTop: \"25px\"}}\r\n                        id=\"myCanvas\">\r\n                    Your browser doesn't support canvas\r\n                </canvas>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from \"./components/Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Snake</h1>\n        </header>\n        <Board/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}